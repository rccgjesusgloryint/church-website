// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PROD_DATABASE_URL")
  directUrl = env("PROD_DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
  MINISTER
}

model User {
  id         String    @id @default(uuid())
  externalId String    @unique
  attributes Json
  role       Role      @default(MEMBER)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Media {
  id         String   @id @default(uuid())
  type       String?
  name       String
  link       String   @unique
  externalId String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Events {
  id          Int      @id @default(autoincrement())
  event       String
  date        String[]
  location    String
  description Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Newsletter {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Sermon {
  id              Int      @id @default(autoincrement())
  videoUrl        String
  previewImageUrl String
  sermonTitle     String
  tags            Tag[]
  likes           Int?
  comments        Comment[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Tag {
  id        Int    
  name      String  @id
  color     String
  sermon    Sermon?  @relation(fields: [sermonId], references: [id])
  sermonId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id          Int    @id @default(autoincrement())
  content     String
  likes       Int
  sermon      Sermon? @relation(fields: [sermonId], references: [id])
  sermonId    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}